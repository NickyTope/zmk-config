#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWE 0
#define ARR 1
#define NUM 2
#define SYM 3

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

/ {
    behaviors {
        scaps: scaps {
            compatible = "zmk,behavior-tap-dance";
            label = "Shift Caps";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&caps_word>;
        };
        cb: cb {
            compatible = "zmk,behavior-hold-tap";
            label = "Ctrl Bsp";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp RET>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp TAB>;
        };
        combo_fat_arrow {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&fat_arrow>;
        };
    };

    macros {
        fat_arrow: fat_arrow {
            label = "=>";
            compatible = "zmk,behavior-macro";
            tap-ms = <40>;
            bindings = <&kp EQUAL &kp GT>;
            #binding-cells = <0>;
        };
        num_gui: num_gui {
            label = "Num Gui";
            compatible = "zmk,behavior-macro";
            bindings = 
                <&macro_press &mo NUM &kp RGUI>,
                <&macro_pause_for_release>,
                <&macro_release &mo NUM &kp RGUI>;
            #binding-cells = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp ESC &kp Q &kp W &kp E &kp R &kp T                        &kp Y     &kp U     &kp I     &kp O     &kp P    &kp BSPC
            &cb LCTRL BSPC &kp A &kp S &kp D &kp F &kp G                 &kp H     &kp J     &kp K     &kp L     &kp SEMI &mt RCTRL SQT
            &scaps &kp Z &kp X &kp C &kp V &kp B                     &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH &mt RSHFT RET
                            &mt LGUI DEL &lt SYM RET &lt NUM SPACE   &kp LALT &lt ARR SPACE &num_gui
        >;
        };

        arr_layer {
            bindings = <
            &trans &trans &trans &kp C_VOL_DN &kp C_VOL_UP &trans           &trans &kp HOME &trans &kp END &trans &trans
            &trans &trans &trans &kp C_PREV &kp C_NEXT &kp C_PP             &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
            &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans &trans     &trans &kp PG_DN &kp PG_UP &trans &trans &trans
                                 &trans &trans &trans                       &trans &trans &trans
        >;
        };

        num_layer {
            bindings = <
            &kp TILDE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
            &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                       &kp F6 &kp LBRC &kp RBRC &kp BSLH &kp MINUS &kp EQUAL
            &trans &kp F7 &kp F8 &kp F9 &kp F10 &kp F11                     &kp F12 &fat_arrow &trans &trans &trans &trans
                                 &trans &trans &trans                       &trans &trans &trans
            >;
        };

        sym_layer {
            bindings = <
            &kp GRAVE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT           &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &trans
            &trans &kp GRAVE &trans &trans &trans &trans                    &trans &kp LBKT &kp RBKT &kp PIPE &kp UNDER &kp PLUS
            &trans &trans &trans &trans &trans &trans                       &trans &kp LPAR &kp RPAR &trans &trans &trans
                                 &trans &trans &trans                       &trans &trans &trans
        >;
        };
    };
};